{"name": "test_001", "status": "failed", "statusDetails": {"message": "AssertionError: 实际值: 1 != 预期值: 0", "trace": "self = <basic_frame.cases.test_result.TestResult object at 0x000002780C7FC080>\nsomething = None\n\n    @allure.step(\"test_001\")\n    @allure.story(\"get_result_001\")\n    @pytest.mark.get_result\n    def test_001(self, something):\n        \"\"\"\n         获取测试用例执行结果: 调用001\n        \"\"\"\n        print(\"test_001_something: \", something)\n>       apibase.assert_handle.assert_equal_value(1, 0)\n\ncases\\test_result.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ncls = <class 'basic_frame.utils.assert_handle.Assertion'>, reality_value = 1\nexpected_value = 0\n\n    @classmethod\n    def assert_equal_value(cls, reality_value, expected_value):\n        \"\"\"\n        校验等于预期值\n        :param reality_value: 实际值\n        :param expected_value: 预期值\n        :return:\n        \"\"\"\n>       assert expected_value == reality_value, \"实际值: {} != 预期值: {}\".format(reality_value, expected_value)\nE       AssertionError: 实际值: 1 != 预期值: 0\n\nutils\\assert_handle.py:19: AssertionError"}, "description": "\n         获取测试用例执行结果: 调用001\n        ", "steps": [{"name": "test_001", "status": "failed", "statusDetails": {"message": "AssertionError: 实际值: 1 != 预期值: 0\n", "trace": "  File \"C:\\Users\\luban\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\allure_commons\\_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"F:\\api_base\\basic_frame\\cases\\test_result.py\", line 21, in test_001\n    apibase.assert_handle.assert_equal_value(1, 0)\n  File \"F:\\api_base\\basic_frame\\utils\\assert_handle.py\", line 19, in assert_equal_value\n    assert expected_value == reality_value, \"实际值: {} != 预期值: {}\".format(reality_value, expected_value)\n"}, "parameters": [{"name": "something", "value": "None"}], "start": 1619690905079, "stop": 1619690905079}], "start": 1619690905079, "stop": 1619690905097, "uuid": "0a717e77-ce02-465a-9958-f7ec5502c595", "historyId": "46757a73c2c1ebd2a3c6350bbbeb6c9c", "testCaseId": "1e64ccdb54d25d6d6d172226b8458f5d", "fullName": "basic_frame.cases.test_result.TestResult#test_001", "labels": [{"name": "feature", "value": "get_result_module"}, {"name": "severity", "value": "normal"}, {"name": "story", "value": "get_result_001"}, {"name": "tag", "value": "get_result"}, {"name": "parentSuite", "value": "basic_frame.cases"}, {"name": "suite", "value": "test_result"}, {"name": "subSuite", "value": "TestResult"}, {"name": "host", "value": "DESKTOP-H3U0RMV"}, {"name": "thread", "value": "17532-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "basic_frame.cases.test_result"}]}