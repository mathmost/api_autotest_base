{"name": "test_login[test_login_mobile_empty]", "status": "broken", "statusDetails": {"message": "json.decoder.JSONDecodeError: Expecting value: line 3 column 1 (char 2)", "trace": "@pytest.fixture(scope=\"session\", autouse=True)\n    def fix_module():\n        \"\"\"\n        全局前后置处理\n        根据不同环境执行登录获取session、token（根据业务获取）, 只需要登陆一次\n        \"\"\"\n        print(\"====== start ====== \")\n        #  获取session\n        # 加载配置类信息登录\n        print(\"执行环境: \", app_cof.BASE_URL)\n        print(\"用户名以及密码: \", app_cof.MOBILE, app_cof.PASSWORD)\n        fix_login_res = login(app_cof.MOBILE, app_cof.PASSWORD, env_url=app_cof.BASE_URL)\n>       res_status, login_res = fix_login_res.status_code, fix_login_res.json()\n\n..\\conftest.py:59: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\Users\\luban\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\requests\\models.py:900: in json\n    return complexjson.loads(self.text, **kwargs)\nC:\\Users\\luban\\AppData\\Local\\Programs\\Python\\Python37\\lib\\json\\__init__.py:348: in loads\n    return _default_decoder.decode(s)\nC:\\Users\\luban\\AppData\\Local\\Programs\\Python\\Python37\\lib\\json\\decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <json.decoder.JSONDecoder object at 0x00000286CFA70438>\ns = '\\n\\n<!DOCTYPE html>\\n<html lang=\"en\">\\n    <head>\\n        <meta http-equiv=\"Content-Language\" content=\"en\">\\n       ...=\"/static/assets/dist/outside_pages_app.4aeb5c7bb638de6e9efa.js\"></script>\\n        \\n\\n        \\n    </body>\\n</html>'\nidx = 2\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 3 column 1 (char 2)\n\nC:\\Users\\luban\\AppData\\Local\\Programs\\Python\\Python37\\lib\\json\\decoder.py:355: JSONDecodeError"}, "parameters": [{"name": "case", "value": "'test_login_mobile_empty'"}], "start": 1618237475250, "stop": 1618237475250, "uuid": "316ca60c-9791-42ff-bd22-3082c73a1c86", "historyId": "3fd4dea2e5841ef52cfe4440fb70e54e", "testCaseId": "f582bdb5e9103a1feaea4592e666f176", "fullName": "report_demo.cases.test_login.TestLoginRunner#test_login", "labels": [{"name": "severity", "value": "normal"}, {"name": "feature", "value": "login_module"}, {"name": "story", "value": "login"}, {"name": "tag", "value": "run(order=1)"}, {"name": "tag", "value": "login"}, {"name": "parentSuite", "value": "report_demo.cases"}, {"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "TestLoginRunner"}, {"name": "host", "value": "LUBAN-20210319K"}, {"name": "thread", "value": "9060-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "report_demo.cases.test_login"}]}